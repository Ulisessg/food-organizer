generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model food_ingredients {
  id             Int         @id @default(autoincrement())
  food_id        Int
  ingredient_id  Int
  ingredient_qty Decimal?    @db.Decimal(10, 2)
  creation_date  DateTime    @db.DateTime(0)
  foods          foods       @relation(fields: [food_id], references: [id], map: "fk_f_ingr_food_id")
  ingredients    ingredients @relation(fields: [ingredient_id], references: [id], map: "fk_f_ingr_ingredient_id")

  @@index([food_id], map: "fk_f_ingr_food_id_idx")
  @@index([ingredient_id], map: "fk_f_ingr_ingredient_id_idx")
}

model food_prices {
  id            Int      @id @default(autoincrement())
  value         Decimal  @db.Decimal(10, 2)
  price_date    DateTime @db.DateTime(0)
  food_id       Int
  creation_date DateTime @db.DateTime(0)
  foods         foods    @relation(fields: [food_id], references: [id], map: "fk_f_prices_food_id")

  @@index([food_id], map: "fk_f_prices_food_id_idx")
}

model food_types {
  id            Int      @id @default(autoincrement())
  name          String   @unique(map: "name") @db.Char(50)
  creation_date DateTime @db.DateTime(0)
  foods         foods[]
}

model foods {
  id               Int                @id @default(autoincrement())
  name             String             @unique(map: "name") @db.VarChar(50)
  used_counter     Int?               @default(0)
  preparation_time Int                @db.SmallInt
  score            Int?               @default(0) @db.SmallInt
  food_type_id     Int
  image            String?            @db.Char(50)
  creation_date    DateTime           @db.DateTime(0)
  food_ingredients food_ingredients[]
  food_prices      food_prices[]
  food_types       food_types         @relation(fields: [food_type_id], references: [id], map: "fk_foods_food_type_id_idx")
  menu_foods       menu_foods[]

  @@index([food_type_id], map: "fk_foods_food_type_id_idx")
}

model ingredient_prices {
  id            Int         @id @default(autoincrement())
  value         Decimal     @db.Decimal(10, 2)
  price_date    DateTime    @db.DateTime(0)
  ingredient_id Int
  creation_date DateTime    @db.DateTime(0)
  ingredients   ingredients @relation(fields: [ingredient_id], references: [id], map: "fk_price_ingredient_id")

  @@index([ingredient_id], map: "fk_price_ingredient_id_idx")
}

model ingredient_purchase_places {
  id                Int             @id @default(autoincrement())
  ingredient_id     Int
  purchase_place_id Int
  creation_date     DateTime        @db.DateTime(0)
  ingredients       ingredients     @relation(fields: [ingredient_id], references: [id], map: "fk_ingredient_id")
  purchase_places   purchase_places @relation(fields: [purchase_place_id], references: [id], map: "fk_purchase_place_id")

  @@index([ingredient_id], map: "fk_ingredient_id_idx")
  @@index([purchase_place_id], map: "fk_purchase_place_id_idx")
}

model ingredient_stock {
  id             Int         @id @default(autoincrement())
  ingredient_id  Int         @unique(map: "ingredient_id")
  comment        String?     @db.VarChar(100)
  ingredient_qty Int         @db.SmallInt
  creation_date  DateTime?   @db.DateTime(0)
  ingredients    ingredients @relation(fields: [ingredient_id], references: [id], map: "fk_ing_id")

  @@index([ingredient_id], map: "fk_is_ingredient_id")
}

model ingredients {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @unique(map: "name") @db.VarChar(20)
  uom_id                     Int
  image                      String?                      @db.Char(50)
  creation_date              DateTime                     @db.DateTime(0)
  comment                    String?                      @db.VarChar(100)
  food_ingredients           food_ingredients[]
  ingredient_prices          ingredient_prices[]
  ingredient_purchase_places ingredient_purchase_places[]
  ingredient_stock           ingredient_stock?
  units_of_measure           units_of_measure             @relation(fields: [uom_id], references: [id], map: "fk_uom_id")

  @@index([uom_id], map: "fk_uom_id_idx")
}

model purchase_places {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @unique(map: "name") @db.Char(50)
  address                    String?                      @db.VarChar(50)
  creation_date              DateTime                     @db.DateTime(0)
  ingredient_purchase_places ingredient_purchase_places[]
}

model units_of_measure {
  id                     Int                    @id @default(autoincrement())
  name                   String                 @unique(map: "name") @db.VarChar(20)
  abbreviation           String                 @unique(map: "abbreviation") @db.Char(5)
  creation_date          DateTime               @db.DateTime(0)
  uomt_id                Int
  ingredients            ingredients[]
  units_of_measure_types units_of_measure_types @relation(fields: [uomt_id], references: [id], map: "fk_uomt_id")

  @@index([uomt_id], map: "fk_uomt_id_idx")
}

model units_of_measure_types {
  id               Int                @id @default(autoincrement())
  name             String             @unique(map: "name") @db.VarChar(20)
  creation_date    DateTime           @db.DateTime(0)
  units_of_measure units_of_measure[]
}

model weekly_menus {
  id                 Int                  @id @default(autoincrement())
  creation_date      DateTime             @unique(map: "creation_date") @db.DateTime(0)
  weekly_menu_days   weekly_menu_days[]
  weekly_menu_prices weekly_menu_prices[]
}

model days {
  id               Int                @id @default(autoincrement())
  name             String             @unique(map: "name") @db.Char(9)
  weekly_menu_days weekly_menu_days[]
}

model menu_foods {
  id            Int       @id @default(autoincrement())
  menu_id       Int
  food_id       Int
  creation_date DateTime? @db.DateTime(0)
  menus         menus     @relation(fields: [menu_id], references: [id], map: "fk_dmf_daily_menu_id")
  foods         foods     @relation(fields: [food_id], references: [id], map: "fk_dmf_food_id")

  @@index([menu_id], map: "fk_dmf_daily_menu_id_idx")
  @@index([food_id], map: "fk_dmf_food_id_idx")
}

model menu_prices {
  id            Int      @id @default(autoincrement())
  value         Decimal  @db.Decimal(10, 2)
  price_date    DateTime @db.DateTime(0)
  menu_id       Int
  creation_date DateTime @db.DateTime(0)
  menus         menus    @relation(fields: [menu_id], references: [id], map: "fk_menu_id")

  @@index([menu_id], map: "fk_menu_id_idx")
}

model menus {
  id               Int                @id @default(autoincrement())
  comment          String?            @db.VarChar(100)
  creation_date    DateTime           @db.DateTime(0)
  menu_foods       menu_foods[]
  menu_prices      menu_prices[]
  weekly_menu_days weekly_menu_days[]
}

model weekly_menu_days {
  id             Int          @id @default(autoincrement())
  weekly_menu_id Int
  day_id         Int
  menu_id        Int
  days           days         @relation(fields: [day_id], references: [id], map: "fk_wmd_d_id")
  menus          menus        @relation(fields: [menu_id], references: [id], map: "fk_wmd_m_id")
  weekly_menus   weekly_menus @relation(fields: [weekly_menu_id], references: [id], map: "fk_wmd_wm_id")

  @@index([day_id], map: "fk_d_id_idx")
  @@index([menu_id], map: "fk_m_id_idx")
  @@index([weekly_menu_id], map: "fk_wm_id_idx")
}

model weekly_menu_prices {
  id             Int          @id @default(autoincrement())
  value          Decimal      @db.Decimal(10, 2)
  price_date     DateTime     @db.DateTime(0)
  weekly_menu_id Int
  creation_date  DateTime     @db.DateTime(0)
  weekly_menus   weekly_menus @relation(fields: [weekly_menu_id], references: [id], map: "fk_weekly_menu_id")

  @@index([weekly_menu_id], map: "fk_weekly_menu_id")
}
